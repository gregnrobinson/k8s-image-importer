#!/bin/bash
set -o errexit
set -o pipefail

export cyan=$(tput setaf 6)
export green=$(tput setaf 2)
export bold=$(tput bold)
export normal=$(tput sgr0)

helpFunction()
{
   echo ""
   echo ""
   echo "Usage: $0 -u targetUrl -d targetDir -r registryPrefix"
   echo ""
   echo -d "${bold}Import all container images within a directory."
   echo -u "${bold}Import all container images using an http/https address."
   echo -r "${bold}The target container registry (required)."
   echo -h "${bold}Display the help menu."
   echo ""
   exit 1
}

while getopts "u:d:r:t:" opt
do
   case "$opt" in
      u ) targetUrl="$OPTARG" ;;
      d ) targetDir="$OPTARG" ;;
      r ) registryPrefix="$OPTARG" ;;
      h ) helpFunction ;;
      ? ) helpFunction ;;
   esac
done

if [[ ! -z $targetUrl ]]
then
  wget -q $targetUrl -O manifest.yaml
  grep -n "image: " manifest.yaml | awk -F  ": " '{print $3}' | sed -e 's/^"//' -e 's/"$//' | cut -f1 -d"#" | cut -f1 -d"@" | sort -u > base_urls
  cat base_urls | while read line
  do
      name=$(echo $line | cut -f3-4 -d"/")
      echo "${normal}${cyan}Importing $line ►►► ${bold}$registryPrefix/$name${normal}${bold}"
      echo $registryPrefix/$name | sort -u >> final_urls
      docker pull $line
      docker tag $line $registryPrefix/$name
      docker push $registryPrefix/$name
  done
fi

if [[ "$targetDir" == *"apigee-hybrid"* ]];
then
  pushd "./apigee-hybrid" > /dev/null
  grep -r -n "image: " . | grep -v "{{" | awk -F  ": " '{print $3}' | sed -e 's/^"//' -e 's/"$//' | cut -f1 -d"#" | cut -f1 -d"@" | sort -u > base_apigee_urls
  cat base_apigee_urls | while read line
  do  
      slash_count=$(awk -F"/" '{print NF-1}' <<< "$line")
      
      if [[ $slash_count -lt 2  ]]; then
         name=$(echo $line | cut -f2 -d"/")
      elif [[ $slash_count -eq 3  ]]; then
         name=$(echo $line | cut -f4-4 -d"/")
      else
         name=$(echo $line | cut -f3-4 -d"/")
      fi
      echo $registryPrefix/$name | sort -u >> final_apigee_urls

      echo "${normal}${cyan}Importing $line ►►► ${bold}$registryPrefix/$name${normal}${bold}"
      docker pull $line
      docker tag $line $registryPrefix/$name
      docker push $registryPrefix/$name
  done
  echo "${normal}${green}"
  popd > /dev/null
  (cd ./apigee-hybrid && cat final_apigee_urls | sort -u)
fi

if [[ "$targetDir" == *"istio-1.9.8-asm.6"* ]];
then
  pushd "./istio-1.9.8-asm.6" > /dev/null
   grep -r -n "image: " . \
    | grep -v "{{" \
    | awk -F  ": " '{print $3}' \
    | sed -e 's/^"//' -e 's/"$//' \
    | cut -f1 -d"#" \
    | cut -f1 -d"@" \
    | sed -e '/auto/d' \
    | sort -u \
    > istio_urls
   cat istio_urls | while read line
   do  
      slash_count=$(awk -F"/" '{print NF-1}' <<< "$line")
      if [[ "$line" == *"install-cni"* ]];
      then
         docker pull istio/$line:1.11.6
         echo istio/$line:1.11.6 >> base_istio_urls
         docker tag istio/$line:1.11.6 $registryPrefix/$line:1.11.6
         docker push $registryPrefix/$line:1.11.6
         echo $registryPrefix/$line:1.11.6 >> final_istio_urls
      elif [[ $slash_count -eq 0  ]]; 
      then
         name=$(echo $line)
         docker pull istio/$name
         echo istio/$name >> base_istio_urls
         docker tag istio/$name $registryPrefix/$name
         docker push $registryPrefix/$name
         echo $registryPrefix/$name >> final_istio_urls
      elif [[ $slash_count -eq 2  ]]; 
      then
         name=$(echo $line | cut -f1-4 -d"/")
         docker pull $name
         echo $name >> base_istio_urls
         docker tag $name $registryPrefix/$(echo $name | cut -f3-4 -d"/")
         docker push $registryPrefix/$(echo $name | cut -f3-4 -d"/")
         echo $registryPrefix/$(echo $name | cut -f3-4 -d"/") >> final_istio_urls
      fi
      echo "${normal}${cyan}Importing $line ►►► ${bold}$registryPrefix/$name${normal}${bold}"
  done
  echo "${normal}${green}"
  popd > /dev/null
  (cd ./istio-1.9.8-asm.6 && cat final_istio_urls | sort -u)
fi
